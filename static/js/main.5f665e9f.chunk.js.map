{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","url","a","fetch","response","ok","Error","json","result","FindMovie","onAddMovie","useState","setTitle","setMovie","warning","setWarning","useEffect","handleSearchMovie","useCallback","length","movieData","Response","Title","Plot","Poster","imdbID","handleAddMovie","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","data","setMovies","addMovie","newMovie","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f665e9f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\nconst BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=6fdb8fe3';\n\nconst getMovie = async(url) => {\n  const response = await fetch(`${BASE_URL}&t=${url}`);\n\n  if (!response.ok) {\n    throw new Error(`Failed to load remote data from ${url}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const FindMovie = ({ onAddMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [warning, setWarning] = useState('');\n\n  useEffect(() => {\n    setWarning('');\n  }, [title]);\n\n  const handleSearchMovie = useCallback(async() => {\n    if (title.length === 0) {\n      setWarning('Please enter a title!');\n      setMovie(null);\n\n      return;\n    }\n\n    const movieData = await getMovie(title);\n\n    if (movieData.Response === 'False') {\n      setWarning(movieData.Error);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: movieData.Title,\n      description: movieData.Plot,\n      imgUrl: movieData.Poster,\n      imdbUrl: `https://imdb.com/title/${movieData.imdbID}/`,\n      imdbId: movieData.imdbID,\n    });\n  }, [title]);\n\n  const handleAddMovie = useCallback(() => {\n    if (!movie) {\n      setWarning('Please find a movie first.');\n\n      return;\n    }\n\n    onAddMovie(movie);\n    setMovie(null);\n    setTitle('');\n  }, [movie]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input${warning && ' is-danger'}`}\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {warning}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleSearchMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleAddMovie}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {\n        movie\n          && (\n            <div className=\"container\">\n              <h2 className=\"title\">Preview</h2>\n              <MovieCard key={movie.imdbId} {...movie} />\n            </div>\n          )\n      }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = useCallback((newMovie) => {\n    if (movies.some(movie => movie.imdbId === newMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, newMovie]);\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}